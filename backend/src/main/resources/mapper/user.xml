<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

    <mapper namespace="tayo.sseuktudy.mapper.UserMapper">

    <insert id="registUserMain" parameterType="UserMainRegistDto">
        insert into user (user_id, user_pw, user_nickname,user_social)
        value (#{userId}, #{userPw}, #{userNickname}, #{userSocial});
    </insert>
    <update id="modifyUser" parameterType="UserModifyDto">
        update user set user_pw = #{userPw}, user_nickname = #{userNickname}, user_age = #{userAge}, user_address = #{userAddress}
        where user_id = #{userId};
    </update>
    <delete id="deleteUserCategory" parameterType="String">
        delete
        from user_like_category
        where user_id = #{userId};
    </delete>
    <insert id="insertUserCategory" parameterType="UserModifyDto">
        insert into user_like_category (user_id, category_id)values
        <foreach collection="userCategorys" item="userCategory"  separator="," >   (#{userId}, #{userCategory})</foreach>
    </insert>
    <delete id="deleteUser" parameterType="String">
        delete from user
        where user_id = #{userId} ;
    </delete>
    <select id="getUserCategory" parameterType="String" resultType="UserCategoryDto">
        SELECT category_id categoryId, category_name categoryName from category where category_id IN ( select category_id
                                                      from user_like_category
                                                      where user_id = 'ssafy')
    </select>
    <select id="searchUser" parameterType="MailDto" resultType="int">
        select COUNT(user_id) from user
        where user_id = #{userId};
    </select>
    <select id="loginUser" parameterType="UserLoginDto" resultType="int">
        select COUNT(user_id)
        from user
        where user_id = #{userId} and user_pw = #{userPw}
    </select>
    <select id="userInfo" parameterType="String" resultType="userInfoDto">
        select user_id userId, user_pw userPw, user_nickname userNickname, user_age userAge, user_address userAddress, user_social userSocial
        from user
        where user_id = #{userId}
    </select>
    <select id = "getRefreshToken" parameterType = "String" resultType = "String">
        select user_refresh_token
        from user
        where user_id = #{userId}
    </select>

    <update id="saveRefreshToken" parameterType = "Map">
        update user
        set user_refresh_token = #{userRefreshToken}
        where user_id = #{userId}
    </update>

    <update id="deleteRefreshToken" parameterType = "Map">
        update user
        set user_refresh_token = #{userRefreshToken, jdbcType=VARCHAR}
        where user_id = #{userId}
    </update>
    <insert id="mailSend" parameterType="MailDto">
        insert into mail (user_id, auth_key, delete_date)
            value (#{userId}, #{authKey}, now());
    </insert>
    <delete id="mailDelete" parameterType="MailDto">
        delete from mail
        where user_id = #{userId};
    </delete>
    <select id="mailCheck" parameterType="MailDto" resultType="int">
        <![CDATA[
        select COUNT(user_id) from mail
         where TIMESTAMPDIFF(SECOND, delete_date, now()) < 180 and user_id = #{userId} and auth_key = #{authKey} ;
        ]]>

    </select>

    </mapper>